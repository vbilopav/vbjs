define(["sys/template/helpers","sys/template/import","sys/app"],(e,t,n)=>{n.template=((e,...t)=>{let n=[];for(let e=0,a=t.length;e<a;e++){let a=t[e];if("function"==typeof a){let n=a();a=void 0===n||"function"==typeof n?"":n,t[e]=a}a instanceof Promise&&n.push({index:e,sub:a}),void 0!==a&&"object"!=typeof a||(t[e]="")}return n.length?(async()=>{for(let e=0,a=n.length;e<a;e++){let a=n[e],i=await a.sub;if("function"==typeof i){let e=i();e instanceof Promise&&(e=await e),i=void 0===e||"function"==typeof e?"":e}t[a.index]=void 0===i||"object"==typeof i?"":i}return String.raw(e,...t)})():String.raw(e,...t)}),n.composite=((e,...t)=>t);const a=(t,n,a)=>{if((t=t||{}).template||(t.template=e()),a&&(t.template=Object.assign(t.template,a)),t.template.name=n,t.___extra){for(let[e,n]of Object.entries(t.___extra))t.template[e]=n;delete t.___extra}return t},i=(e,t,i,o)=>new Function("return "+n.config.name+".template`"+e+"`;").call(a(t,o,i));return n.parse=(async(e,n,a,o)=>{let r;if("string"==typeof e)r=e;else{let t=(r=e.toString()).indexOf("`",0);if(-1===t)throw new Error("Invalid template");r=r.substring(t+1,r.lastIndexOf("`"))}return await t.parseImportsAsync(r),await i(r,n,a,o)}),{parseTemplate:i,parseComposite:(e,t,i,o)=>new Function("return "+n.config.name+".composite`"+e+"`;").call(a(t,o,i))}});