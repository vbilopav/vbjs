define(["sys/template/helpers","sys/template/import","sys/app","sys/view-manager/utils"],(e,t,n,{prepareInstance:a})=>{n.template=((e,...t)=>{let n=[];for(let e=0,a=t.length;e<a;e++){let a=t[e];if("function"==typeof a){let n=a();a=void 0===n||"function"==typeof n?"":n,t[e]=a}a instanceof Promise&&n.push({index:e,sub:a}),"string"!=typeof a&&(t[e]="")}return n.length?(async()=>{for(let e=0,a=n.length;e<a;e++){let a=n[e],r=await a.sub;if("function"==typeof r){let e=r();e instanceof Promise&&(e=await e),r=void 0===e||"function"==typeof e?"":e}t[a.index]="string"!=typeof r?"":r}return String.raw(e,...t)})():String.raw(e,...t)}),n.composite=((e,...t)=>t);const r=(t,n,r)=>((t=t||{}).template||(t.template=e()),r&&(t.template=Object.assign(t.template,r)),t.template.name=n,a(t.template),t.___owner&&(t.template.owner=t.___owner,delete t.___owner),t),i=(e,t,a,i)=>new Function("return "+n.config.name+".template`"+e+"`;").call(r(t,i,a));return n.parse=(async(e,n,a,r)=>{let o;if("string"==typeof e)o=e;else{let t=(o=e.toString()).indexOf("`",0);if(-1===t)throw new Error("Invalid template");o=o.substring(t+1,o.lastIndexOf("`"))}return await t.parseImportsAsync(o),await i(o,n,a,r)}),{parseTemplate:i,parseComposite:(e,t,a,i)=>new Function("return "+n.config.name+".composite`"+e+"`;").call(r(t,i,a))}});