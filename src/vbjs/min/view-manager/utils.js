define([],()=>{const e={template:1,class:2,string:3};return moduleRendered=((e,t,n=!0)=>{e.model instanceof _app.Model==!1&&(e.context||e.model)&&(e.model=new _app.Model(e.model).bind(t.element,e.context)),n?!e.rendered||e.rendered({params:t.params,element:t.element}):e.changed?e.changed({params:t.params,element:t.element}):e.rendered&&e.rendered({params:t.params,element:t.element})}),{getId:e=>"_view"+e,types:e,getViewType:(t,n)=>{let d=typeof t;if("function"===d)return(e=>-1!==e.indexOf("template!"))(n)?e.template:e.class;if("string"===d)return e.string;throw new Error("unknown view type "+t)},showView:e=>{window.scrollTo(e.x,e.y)},templateRendered:(e,t)=>{(e.template.context||e.template.model)&&(e.template.model=new _app.Model(e.template.model).bind(t,e.template.context)),!e.template.rendered||e.template.rendered(t)},moduleRendered:moduleRendered,prepareParams:async e=>e instanceof Promise?await e:("object"!=typeof e&&(e={value:e}),e)}});