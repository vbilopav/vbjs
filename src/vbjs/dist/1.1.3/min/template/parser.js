define(["sys/template/helpers","sys/template/import","sys/app"],(e,t,n)=>{n.template=((e,...t)=>{let n=[];for(let e=0,r=t.length;e<r;e++){let r=t[e];if("function"==typeof r){let n=r();r=void 0===n||"function"==typeof n?"":n,t[e]=r}r instanceof Promise&&n.push({index:e,sub:r}),"string"!=typeof r&&(t[e]="")}return n.length?(async()=>{for(let e=0,r=n.length;e<r;e++){let r=n[e],a=await r.sub;if("function"==typeof a){let e=a();e instanceof Promise&&(e=await e),a=void 0===e||"function"==typeof e?"":e}t[r.index]="string"!=typeof a?"":a}return String.raw(e,...t)})():String.raw(e,...t)}),n.composite=((e,...t)=>t);const r=(t,n,r)=>{if((t=t||{}).template||(t.template=e()),r&&(t.template=Object.assign(t.template,r)),t.template.name=n,t.___extra){for(let[e,n]of Object.entries(t.___extra))t.template[e]=n;delete t.___extra}return t},a=(e,t,a,i)=>new Function("return "+n.config.name+".template`"+e+"`;").call(r(t,i,a));return n.parse=(async(e,n,r,i)=>{let o;if("string"==typeof e)o=e;else{let t=(o=e.toString()).indexOf("`",0);if(-1===t)throw new Error("Invalid template");o=o.substring(t+1,o.lastIndexOf("`"))}return await t.parseImportsAsync(o),await a(o,n,r,i)}),{parseTemplate:a,parseComposite:(e,t,a,i)=>new Function("return "+n.config.name+".composite`"+e+"`;").call(r(t,i,a))}});